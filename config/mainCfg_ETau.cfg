[general]

lumi = 35867 # pb^-1
outputFolder = ./analysis_ETau_19Lug_ESplots3

data        = DsingleEle
# signals     = Radion250, Radion270, Radion280, Radion300, Radion350, Radion400, Radion450, Radion500, Radion550, Radion600, Radion650, Radion750, Radion900, lambdarew0, lambdarew1, lambdarew2, lambdarew3, lambdarew4, lambdarew5, lambdarew6, lambdarew7, lambdarew8, lambdarew9, lambdarew10, lambdarew11, lambdarew12, lambdarew13, lambdarew14, lambdarew15, lambdarew16, lambdarew17, lambdarew18, lambdarew19, lambdarew20, lambdarew21, lambdarew22, lambdarew23, lambdarew24, lambdarew25, lambdarew26, lambdarew27, lambdarew28, lambdarew29, lambdarew30, lambdarew31, lambdarew32, lambdarew33, lambdarew34, lambdarew35, lambdarew36, lambdarew37, lambdarew38, lambdarew39, lambdarew40, lambdarew41, lambdarew42, lambdarew43, lambdarew44, lambdarew45, lambdarew46, lambdarew47, lambdarew48, lambdarew49, lambdarew50, lambdarew51
# signals = lambdarew99900, lambdarew99901, lambdarew99902, lambdarew99903, lambdarew99904, lambdarew99905, lambdarew99906, lambdarew99907, lambdarew99908, lambdarew99909, lambdarew99910, lambdarew99911, lambdarew99912, lambdarew99913, lambdarew99914, lambdarew99915, lambdarew99916, lambdarew99917, lambdarew99918, lambdarew99919, lambdarew99920, lambdarew99921, lambdarew99922, lambdarew99923, lambdarew99924, lambdarew99925, lambdarew99926, lambdarew99927, lambdarew99928, lambdarew99929, lambdarew99930, lambdarew99931, lambdarew99932, lambdarew99933, lambdarew99934, lambdarew99935, lambdarew99936, lambdarew99937, lambdarew99938, lambdarew99939, lambdarew99940, lambdarew99941, lambdarew99942, lambdarew99943, lambdarew99944, lambdarew99945, lambdarew99946, lambdarew99947, lambdarew99948, lambdarew99949, lambdarew99950, lambdarew99951, lambdarew99952, lambdarew99953, lambdarew99954, lambdarew99955, lambdarew99956, lambdarew99957, lambdarew99958, lambdarew99959, lambdarew99960, lambdarew99961, lambdarew99962, lambdarew99963, lambdarew99964, lambdarew99965, lambdarew99966, lambdarew99967, lambdarew99968, lambdarew99969, lambdarew99970, lambdarew99971, lambdarew99972, lambdarew99973, lambdarew99974, lambdarew99975, lambdarew99976, lambdarew99977, lambdarew99978, lambdarew99979, lambdarew99980
# signals = GravitonRS300, GravitonRS650, GravitonRS900, Graviton250, Graviton260, Graviton270, Graviton280, Graviton300, Graviton320, Graviton340, Graviton350, Graviton400, Graviton450, Graviton500, Graviton550, Graviton600, Graviton650, Graviton750, Graviton800
# signals = benchmark1, benchmark2, benchmark3, benchmark4, benchmark5, benchmark6, benchmark7, benchmark8, benchmark9, benchmark10, benchmark11, benchmark12, lambdarew0, lambdarew1, lambdarew2, lambdarew3, lambdarew4, lambdarew5, lambdarew6, lambdarew7, lambdarew8, lambdarew9, lambdarew10, lambdarew11, lambdarew12, lambdarew13, lambdarew14, lambdarew15, lambdarew16, lambdarew17, lambdarew18, lambdarew19, lambdarew20, lambdarew21, lambdarew22, lambdarew23, lambdarew24, lambdarew25, lambdarew26, lambdarew27, lambdarew28, lambdarew29, lambdarew30, lambdarew31, lambdarew32, lambdarew33, lambdarew34, lambdarew35, lambdarew36, lambdarew37, lambdarew38, lambdarew39, lambdarew40, lambdarew41, lambdarew42, lambdarew43, lambdarew44, lambdarew45, lambdarew46, lambdarew47, lambdarew48, lambdarew49, lambdarew50, lambdarew51
# signals = lambdarew21
# signals     = Graviton250, Graviton260, Graviton270, Graviton280, Graviton300, Graviton320, Graviton340, Graviton350, Graviton400, Graviton450, Graviton500, Graviton550, Graviton600, Graviton650, Graviton750, Graviton800, Radion250, Radion270, Radion280, Radion300, Radion350, Radion400, Radion450, Radion500, Radion550, Radion600, Radion650, Radion750, Radion900, lambdarew0, lambdarew1, lambdarew2, lambdarew3, lambdarew4, lambdarew5, lambdarew6, lambdarew7, lambdarew8, lambdarew9, lambdarew10, lambdarew11, lambdarew12, lambdarew13, lambdarew14, lambdarew15, lambdarew16, lambdarew17, lambdarew18, lambdarew19, lambdarew20, lambdarew21, lambdarew22, lambdarew23, lambdarew24, lambdarew25, lambdarew26, lambdarew27, lambdarew28, lambdarew29, lambdarew30, lambdarew31, lambdarew32, lambdarew33, lambdarew34, lambdarew35, lambdarew36, lambdarew37, lambdarew38, lambdarew39, lambdarew40, lambdarew41, lambdarew42, lambdarew43, lambdarew44, lambdarew45, lambdarew46, lambdarew47, lambdarew48, lambdarew49, lambdarew50, lambdarew51, benchmark1, benchmark2, benchmark3, benchmark4, benchmark5, benchmark6, benchmark7, benchmark8, benchmark9, benchmark10, benchmark11, benchmark12
signals     = Graviton250

# signals = bidimrew0, bidimrew1, bidimrew2, bidimrew3, bidimrew4, bidimrew5, bidimrew6, bidimrew7, bidimrew8, bidimrew9, bidimrew10, bidimrew11, bidimrew12, bidimrew13, bidimrew14, bidimrew15, bidimrew16, bidimrew17, bidimrew18, bidimrew19, bidimrew20, bidimrew21, bidimrew22, bidimrew23, bidimrew24, bidimrew25, bidimrew26, bidimrew27, bidimrew28, bidimrew29, bidimrew30, bidimrew31, bidimrew32, bidimrew33, bidimrew34, bidimrew35, bidimrew36, bidimrew37, bidimrew38, bidimrew39, bidimrew40, bidimrew41, bidimrew42, bidimrew43, bidimrew44, bidimrew45, bidimrew46, bidimrew47, bidimrew48, bidimrew49, bidimrew50, bidimrew51, bidimrew52, bidimrew53, bidimrew54, bidimrew55, bidimrew56, bidimrew57, bidimrew58, bidimrew59, bidimrew60, bidimrew61, bidimrew62, bidimrew63, bidimrew64, bidimrew65, bidimrew66, bidimrew67, bidimrew68, bidimrew69, bidimrew70, bidimrew71, bidimrew72, bidimrew73, bidimrew74, bidimrew75, bidimrew76, bidimrew77, bidimrew78, bidimrew79, bidimrew80, bidimrew81, bidimrew82, bidimrew83, bidimrew84, bidimrew85, bidimrew86, bidimrew87, bidimrew88, bidimrew89, bidimrew90, bidimrew91, bidimrew92, bidimrew93, bidimrew94, bidimrew95, bidimrew96, bidimrew97, bidimrew98, bidimrew99, bidimrew100, bidimrew101, bidimrew102, bidimrew103, bidimrew104, bidimrew105, bidimrew106, bidimrew107, bidimrew108, bidimrew109, bidimrew110, bidimrew111, bidimrew112, bidimrew113, bidimrew114, bidimrew115, bidimrew116, bidimrew117, bidimrew118, bidimrew119, bidimrew120, bidimrew121, bidimrew122, bidimrew123, bidimrew124, bidimrew125, bidimrew126, bidimrew127, bidimrew128, bidimrew129, bidimrew130, bidimrew131, bidimrew132, bidimrew133, bidimrew134, bidimrew135, bidimrew136, bidimrew137, bidimrew138, bidimrew139, bidimrew140, bidimrew141, bidimrew142, bidimrew143, bidimrew144, bidimrew145, bidimrew146, bidimrew147, bidimrew148, bidimrew149, bidimrew150, bidimrew151, bidimrew152, bidimrew153, bidimrew154, bidimrew155, bidimrew156, bidimrew157, bidimrew158, bidimrew159, bidimrew160, bidimrew161, bidimrew162, bidimrew163, bidimrew164, bidimrew165, bidimrew166, bidimrew167, bidimrew168, bidimrew169, bidimrew170, bidimrew171, bidimrew172, bidimrew173, bidimrew174, bidimrew175, bidimrew176, bidimrew177, bidimrew178, bidimrew179, bidimrew180, bidimrew181, bidimrew182, bidimrew183, bidimrew184, bidimrew185, bidimrew186, bidimrew187, bidimrew188, bidimrew189, bidimrew190, bidimrew191, bidimrew192, bidimrew193, bidimrew194, bidimrew195, bidimrew196, bidimrew197, bidimrew198, bidimrew199, bidimrew200, bidimrew201, bidimrew202, bidimrew203, bidimrew204, bidimrew205, bidimrew206, bidimrew207, bidimrew208, bidimrew209, bidimrew210, bidimrew211, bidimrew212, bidimrew213, bidimrew214, bidimrew215, bidimrew216, bidimrew217, bidimrew218, bidimrew219, bidimrew220, bidimrew221, bidimrew222, bidimrew223, bidimrew224, bidimrew225, bidimrew226, bidimrew227, bidimrew228, bidimrew229, bidimrew230, bidimrew231, bidimrew232, bidimrew233, bidimrew234, bidimrew235, bidimrew236, bidimrew237, bidimrew238, bidimrew239, bidimrew240, bidimrew241, bidimrew242, bidimrew243, bidimrew244, bidimrew245, bidimrew246, bidimrew247, bidimrew248, bidimrew249, bidimrew250, bidimrew251, bidimrew252, bidimrew253, bidimrew254, bidimrew255, bidimrew256, bidimrew257, bidimrew258, bidimrew259, bidimrew260, bidimrew261, bidimrew262, bidimrew263, bidimrew264, bidimrew265, bidimrew266, bidimrew267, bidimrew268, bidimrew269, bidimrew270, bidimrew271, bidimrew272, bidimrew273, bidimrew274, bidimrew275, bidimrew276, bidimrew277, bidimrew278, bidimrew279, bidimrew280, bidimrew281, bidimrew282, bidimrew283, bidimrew284, bidimrew285, bidimrew286, bidimrew287, bidimrew288, bidimrew289, bidimrew290, bidimrew291, bidimrew292, bidimrew293, bidimrew294, bidimrew295, bidimrew296, bidimrew297, bidimrew298, bidimrew299
# signals = lambdarew21, lambdarew40, Radion300, Radion600, Radion900


# signals     = Radion600, lambdarew21

# signals     = Radion250, Radion300, Radion350, Radion400, Radion600, Radion900, lambdarew0, lambdarew21, lambdarew41
backgrounds = TTfullyHad, TTfullyLep, TTsemiLep, DY0b, DY1b, DY2b, WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf, TWtop, TWantitop, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo4L, ZZTo4Q, ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau

# signals     = HHSM, lambdarew0, lambdarew1, lambdarew2, lambdarew3, lambdarew4, lambdarew5, lambdarew6, lambdarew7, lambdarew8, lambdarew9, lambdarew10, lambdarew11, lambdarew12, lambdarew13, lambdarew14, lambdarew15, lambdarew16, lambdarew17, lambdarew18, lambdarew19, lambdarew20, lambdarew21, lambdarew22, lambdarew23, lambdarew24, lambdarew25, lambdarew26, lambdarew27, lambdarew28, lambdarew29, lambdarew30, lambdarew31, lambdarew32, lambdarew33, lambdarew34, lambdarew35, lambdarew36, lambdarew37, lambdarew38, lambdarew39, lambdarew40, lambdarew41, lambdarew42, lambdarew43, lambdarew44, lambdarew45, lambdarew46, lambdarew47, lambdarew48, lambdarew49, lambdarew50, lambdarew51, Radion250, Radion260, Radion270, Radion280, Radion300, Radion320, Radion340, Radion350, Radion400, Radion500, Radion550, Radion650, Radion700, Radion750, Radion800, Radion900
# backgrounds = TTfullyHad, TTfullyLep, TTsemiLep, DY0b, DY1b, DY2b, WJets0jet, WJets1jet, WJets2jet, WJets3jet, WJets4jet, TWtop, TWantitop, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, ZZTo2L2Q

# variables   = HH_mass_raw, HHKin_mass_raw, MT2, bH_mass_raw, tauH_mass, tauH_SVFIT_mass, dau1MET_deltaphi, tauHsvfitMet_deltaPhi, dib_deltaR, ditau_deltaR, mT1, mT2, bHMet_deltaPhi, HHsvfit_deltaPhi, BDTResonant, LepTauKine, met_et, fatjet_softdropMass
# variables   = HH_mass_raw, HHKin_mass_raw, MT2, fatjet_softdropMass, bH_mass_raw, tauH_SVFIT_mass, BDTResonant, LepTauKine
# variables   = HHKin_mass_raw, MT2, bH_mass_raw, tauH_SVFIT_mass
# variables   = BDTResonant, LepTauKine
# variables = HHKin_mass_raw, HHKin_mass_raw_tauup, HHKin_mass_raw_taudown, HHKin_mass_raw_jetup, HHKin_mass_raw_jetdown, MT2, MT2_tauup, MT2_taudown, MT2_jetup, MT2_jetdown
# variables = HHKin_mass_raw, MT2, genDecMode1
# variables = MT2
variables = mT1, mT2, dau1_pt, dau1_eta, dau2_pt, dau2_eta
# variables = HHKin_mass_raw, HH_mass_raw, MT2, dau1_pt, dau1_eta, dau2_pt, dau2_eta, bjet1_pt, bjet1_eta, bjet2_pt, bjet2_eta


# variables = bH_mass_raw, fatjet_softdropMass, tauH_SVFIT_mass, dau1MET_deltaphi, tauHsvfitMet_deltaPhi, dib_deltaR, ditau_deltaR, mT1, mT2, bHMet_deltaPhi, HHsvfit_deltaPhi, dib_deltaR_per_bHpt, ditau_deltaR_per_tauHsvfitpt, BDTResonantLM, BDTResonantHM, npv

# variables = bH_mass_raw, fatjet_softdropMass, tauH_SVFIT_mass, dau1MET_deltaphi, tauHsvfitMet_deltaPhi, dib_deltaR, ditau_deltaR, mT1, mT2, bHMet_deltaPhi, HHsvfit_deltaPhi, dib_deltaR_per_bHpt, ditau_deltaR_per_tauHsvfitpt, BDTResonantLM, BDTResonantHM, BDTNonResonant, npv
# variables = MT2, HHKin_mass_raw


# variables2D = tauH_SVFIT_mass:bH_mass_raw
# variables2D = genDecMode1:genDecMode2

# NOTE: final selections are the cartesian combination of (selections) x (regions), name is set to selection_CR
# selections = defaultNoIso, defaultBtagLLNoIso, defaultBtagLLNoIsoBBTTCut, defaultBtagLLNoIsoBBTTCutCirc
# selections = baseline,  1b1j, 2b0j, 1b1jMcut, 2b0jMcut, 1b1jMcutBDT, 2b0jMcutBDT
# selections = s1b1j, s2b0j, s1b1jMcut, s2b0jMcut, s1b1jMcutBDT, s2b0jMcutBDT, s1b1jresolved, s2b0jresolved, sboostedLL, sboostedMM
# selections = s1b1j, s2b0j, sboostedLL, sboostedMM, s1b1jresolvedMcut, s2b0jresolvedMcut, s1b1jresolvedMcutBDT, s2b0jresolvedMcutBDT, sboostedLLMcut, sboostedMMMcut
# selections = s1b1jresolved, s2b0jresolved, s2b0jresolvedMcutlmr90, s2b0jresolvedMcuthmr90
# selections = s2b0jresolvedMcutlmr90, s2b0jresolvedMcuthmr90, s1b1jresolvedMcutlmr90, s1b1jresolvedMcuthmr90, sboostedLLMcut, s1b1jresolvedMcutlmr70, s2b0jresolvedMcutlmr70
# selections = s2b0jresolvedMcut, s2b0jresolved, s1b1jresolved, sboostedLL
# selections = s1b1jresolvedMcutlmr70_nominal, s2b0jresolvedMcutlmr70_nominal, s1b1jresolvedMcutlmr90_nominal, s2b0jresolvedMcutlmr90_nominal, s1b1jresolvedMcuthmr90_nominal, s2b0jresolvedMcuthmr90_nominal, sboostedLLMcut_nominal, s1b1jresolvedMcutlmr70_tesUp, s2b0jresolvedMcutlmr70_tesUp, s1b1jresolvedMcutlmr90_tesUp, s2b0jresolvedMcutlmr90_tesUp, s1b1jresolvedMcuthmr90_tesUp, s2b0jresolvedMcuthmr90_tesUp, sboostedLLMcut_tesUp, s1b1jresolvedMcutlmr70_tesDown, s2b0jresolvedMcutlmr70_tesDown, s1b1jresolvedMcutlmr90_tesDown, s2b0jresolvedMcutlmr90_tesDown, s1b1jresolvedMcuthmr90_tesDown, s2b0jresolvedMcuthmr90_tesDown, sboostedLLMcut_tesDown, s1b1jresolvedMcutlmr70_jesUp, s2b0jresolvedMcutlmr70_jesUp, s1b1jresolvedMcutlmr90_jesUp, s2b0jresolvedMcutlmr90_jesUp, s1b1jresolvedMcuthmr90_jesUp, s2b0jresolvedMcuthmr90_jesUp, sboostedLLMcut_jesUp, s1b1jresolvedMcutlmr70_jesDown, s2b0jresolvedMcutlmr70_jesDown, s1b1jresolvedMcutlmr90_jesDown, s2b0jresolvedMcutlmr90_jesDown, s1b1jresolvedMcuthmr90_jesDown, s2b0jresolvedMcuthmr90_jesDown, sboostedLLMcut_jesDown

# selections = s2b0jresolvedMcutlmr90, s2b0jresolvedMcuthmr90, s1b1jresolvedMcutlmr90, s1b1jresolvedMcuthmr90, sboostedLLMcut, s1b1jresolvedMcutlmr70, s2b0jresolvedMcutlmr70
# selections = baseline, sboostedLL, s1b1jresolved, s2b0jresolved, sboostedLLMcut, s1b1jresolvedMcut, s2b0jresolvedMcut, s2b0jresolvedMcutlmr90, s2b0jresolvedMcuthmr90, s1b1jresolvedMcutlmr90, s1b1jresolvedMcuthmr90, s1b1jresolvedMcutlmr70, s2b0jresolvedMcutlmr70
selections = baseline, s2b0j, s1b1j

# selections =  s0b2j, s0b2jMt, s0b2jMcut, s0b2jresolvedMcut, s0b2jresolvedMcutMtcut, s0b2jMcutNoZ120, s0b2jresolvedMcutNoZ120, s0b2jresolvedMcutMtcutNoZ120, s0b2jMcutNoZ130, s0b2jresolvedMcutNoZ130, s0b2jresolvedMcutMtcutNoZ130, s0b2jMcutNoZMCut, s0b2jresolvedMcutNoZMCut, s0b2jresolvedMcutMtcutNoZMCut
# selections = s2b0jresolved
# selections = sboostedLLMcut, s1b1jresolvedMcutlmr70, s2b0jresolvedMcutlmr70

# selections = s2b0jresolved, s2b0jresolvedMcut, s1b1jresolved, s1b1jresolvedMcut, sboostedLL

# regions = SRforEff
regions    = SR, SStight, OSrlx, SSrlx, OSinviso, SSinviso
# regions    = SR#, SStight, SSrlx


[configs]
sampleCfg = config/sampleCfg.cfg
cutCfg    = config/selectionCfg_ETau.cfg

[merge]
TT       = TTfullyHad, TTfullyLep, TTsemiLep
# WJets    = WJets0jet, WJets1jet, WJets2jet, WJets3jet, WJets4jet
WJets    = WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
TW       = TWtop, TWantitop
EWKW     = EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu
WW       = WWTo2L2Nu, WWTo4Q, WWToLNuQQ
WZ       = WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu
ZZ       = ZZTo2L2Nu, ZZTo2L2Q, ZZTo4L, ZZTo4Q
ZH       = ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau
data_obs = DsingleEle

############################################################################################
############################################################################################
# the following lines are used for postprocessing (pp_), i.e. not read from AnalysisHelper
# but used in subsequent steps of the analysis to combine histos, compute QCD etc..
# we keep them here to have everything at hand

[pp_merge]
# TT    = TTfullyHad, TTfullyLep, TTsemiLep
# WJets = WJets0jet, WJets1jet, WJets2jet, WJets3jet, WJets4jet

## in case some histos must be rebinned. Pass as
## uniqueid = varToRebin , condition, newBinning
[pp_rebin]
r1 = HHKin_mass_raw         , sboostedLLMcut , 250, 500, 600, 700, 850, 1000 # as for ICHEP (then can not draw last low bin)
r2 = HHKin_mass_raw_tauup   , sboostedLLMcut , 250, 500, 600, 700, 850, 1000 # as for ICHEP (then can not draw last low bin)
r3 = HHKin_mass_raw_taudown , sboostedLLMcut , 250, 500, 600, 700, 850, 1000 # as for ICHEP (then can not draw last low bin)
r4 = HHKin_mass_raw_jetup   , sboostedLLMcut , 250, 500, 600, 700, 850, 1000 # as for ICHEP (then can not draw last low bin)
r5 = HHKin_mass_raw_jetdown , sboostedLLMcut , 250, 500, 600, 700, 850, 1000 # as for ICHEP (then can not draw last low bin)

r6  = MT2         , sboostedLLMcut , 0, 150, 200, 250, 300, 500 # some bins bins - the lowest one has small signal
r7  = MT2_tauup   , sboostedLLMcut , 0, 150, 200, 250, 300, 500 # some bins bins - the lowest one has small signal
r8  = MT2_taudown , sboostedLLMcut , 0, 150, 200, 250, 300, 500 # some bins bins - the lowest one has small signal
r9  = MT2_jetup   , sboostedLLMcut , 0, 150, 200, 250, 300, 500 # some bins bins - the lowest one has small signal
r10 = MT2_jetdown , sboostedLLMcut , 0, 150, 200, 250, 300, 500 # some bins bins - the lowest one has small signal

r11 = HHKin_mass_raw         , s2b0jresolvedMcutlmr90, 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 500, 700, 1000
r12 = HHKin_mass_raw_tauup   , s2b0jresolvedMcutlmr90, 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 500, 700, 1000
r13 = HHKin_mass_raw_taudown , s2b0jresolvedMcutlmr90, 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 500, 700, 1000
r14 = HHKin_mass_raw_jetup   , s2b0jresolvedMcutlmr90, 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 500, 700, 1000
r15 = HHKin_mass_raw_jetdown , s2b0jresolvedMcutlmr90, 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 500, 700, 1000

r16 = HHKin_mass_raw         , s1b1jresolvedMcutlmr90, 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 500, 700, 1000
r17 = HHKin_mass_raw_tauup   , s1b1jresolvedMcutlmr90, 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 500, 700, 1000
r18 = HHKin_mass_raw_taudown , s1b1jresolvedMcutlmr90, 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 500, 700, 1000
r19 = HHKin_mass_raw_jetup   , s1b1jresolvedMcutlmr90, 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 500, 700, 1000
r20 = HHKin_mass_raw_jetdown , s1b1jresolvedMcutlmr90, 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 500, 700, 1000


## parameters for QCD evaluation
## doFitIf : condition to be respected to make rlx-to-tight QCD fit. It is used as eval(doFitIf). Use names sel, var

[pp_QCD]
QCDname      = QCD
SR           = SR
yieldSB      = SStight
shapeSB      = SSrlx
SBtoSRfactor = 1.5
# doFitIf      = var == 'MT2' or var == 'HHKin_mass_raw'
doFitIf      = False
fitFunc      = [0] + [1]*x