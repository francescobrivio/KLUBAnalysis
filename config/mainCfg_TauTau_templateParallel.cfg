[general]

lumi = 35867 # pb^-1
outputFolder = ./XXX_OUTPUT_XXX

data        = DTau
# signals     = Radion250, Radion270, Radion280, Radion300, Radion350, Radion400, Radion450, Radion500, Radion550, Radion600, Radion650, Radion750, Radion900, lambdarew0, lambdarew1, lambdarew2, lambdarew3, lambdarew4, lambdarew5, lambdarew6, lambdarew7, lambdarew8, lambdarew9, lambdarew10, lambdarew11, lambdarew12, lambdarew13, lambdarew14, lambdarew15, lambdarew16, lambdarew17, lambdarew18, lambdarew19, lambdarew20, lambdarew21, lambdarew22, lambdarew23, lambdarew24, lambdarew25, lambdarew26, lambdarew27, lambdarew28, lambdarew29, lambdarew30, lambdarew31, lambdarew32, lambdarew33, lambdarew34, lambdarew35, lambdarew36, lambdarew37, lambdarew38, lambdarew39, lambdarew40, lambdarew41, lambdarew42, lambdarew43, lambdarew44, lambdarew45, lambdarew46, lambdarew47, lambdarew48, lambdarew49, lambdarew50, lambdarew51
# signals = bidimrew0, bidimrew1, bidimrew2, bidimrew3, bidimrew4, bidimrew5, bidimrew6, bidimrew7, bidimrew8, bidimrew9, bidimrew10, bidimrew11, bidimrew12, bidimrew13, bidimrew14, bidimrew15, bidimrew16, bidimrew17, bidimrew18, bidimrew19, bidimrew20, bidimrew21, bidimrew22, bidimrew23, bidimrew24, bidimrew25, bidimrew26, bidimrew27, bidimrew28, bidimrew29, bidimrew30, bidimrew31, bidimrew32, bidimrew33, bidimrew34, bidimrew35, bidimrew36, bidimrew37, bidimrew38, bidimrew39, bidimrew40, bidimrew41, bidimrew42, bidimrew43, bidimrew44, bidimrew45, bidimrew46, bidimrew47, bidimrew48, bidimrew49, bidimrew50, bidimrew51, bidimrew52, bidimrew53, bidimrew54, bidimrew55, bidimrew56, bidimrew57, bidimrew58, bidimrew59, bidimrew60, bidimrew61, bidimrew62, bidimrew63, bidimrew64, bidimrew65, bidimrew66, bidimrew67, bidimrew68, bidimrew69, bidimrew70, bidimrew71, bidimrew72, bidimrew73, bidimrew74, bidimrew75, bidimrew76, bidimrew77, bidimrew78, bidimrew79, bidimrew80, bidimrew81, bidimrew82, bidimrew83, bidimrew84, bidimrew85, bidimrew86, bidimrew87, bidimrew88, bidimrew89, bidimrew90, bidimrew91, bidimrew92, bidimrew93, bidimrew94, bidimrew95, bidimrew96, bidimrew97, bidimrew98, bidimrew99, bidimrew100, bidimrew101, bidimrew102, bidimrew103, bidimrew104, bidimrew105, bidimrew106, bidimrew107, bidimrew108, bidimrew109, bidimrew110, bidimrew111, bidimrew112, bidimrew113, bidimrew114, bidimrew115, bidimrew116, bidimrew117, bidimrew118, bidimrew119, bidimrew120, bidimrew121, bidimrew122, bidimrew123, bidimrew124, bidimrew125, bidimrew126, bidimrew127, bidimrew128, bidimrew129, bidimrew130, bidimrew131, bidimrew132, bidimrew133, bidimrew134, bidimrew135, bidimrew136, bidimrew137, bidimrew138, bidimrew139, bidimrew140, bidimrew141, bidimrew142, bidimrew143, bidimrew144, bidimrew145, bidimrew146, bidimrew147, bidimrew148, bidimrew149, bidimrew150, bidimrew151, bidimrew152, bidimrew153, bidimrew154, bidimrew155, bidimrew156, bidimrew157, bidimrew158, bidimrew159, bidimrew160, bidimrew161, bidimrew162, bidimrew163, bidimrew164, bidimrew165, bidimrew166, bidimrew167, bidimrew168, bidimrew169, bidimrew170, bidimrew171, bidimrew172, bidimrew173, bidimrew174, bidimrew175, bidimrew176, bidimrew177, bidimrew178, bidimrew179, bidimrew180, bidimrew181, bidimrew182, bidimrew183, bidimrew184, bidimrew185, bidimrew186, bidimrew187, bidimrew188, bidimrew189, bidimrew190, bidimrew191, bidimrew192, bidimrew193, bidimrew194, bidimrew195, bidimrew196, bidimrew197, bidimrew198, bidimrew199, bidimrew200, bidimrew201, bidimrew202, bidimrew203, bidimrew204, bidimrew205, bidimrew206, bidimrew207, bidimrew208, bidimrew209, bidimrew210, bidimrew211, bidimrew212, bidimrew213, bidimrew214, bidimrew215, bidimrew216, bidimrew217, bidimrew218, bidimrew219, bidimrew220, bidimrew221, bidimrew222, bidimrew223, bidimrew224, bidimrew225, bidimrew226, bidimrew227, bidimrew228, bidimrew229, bidimrew230, bidimrew231, bidimrew232, bidimrew233, bidimrew234, bidimrew235, bidimrew236, bidimrew237, bidimrew238, bidimrew239, bidimrew240, bidimrew241, bidimrew242, bidimrew243, bidimrew244, bidimrew245, bidimrew246, bidimrew247, bidimrew248, bidimrew249, bidimrew250, bidimrew251, bidimrew252, bidimrew253, bidimrew254, bidimrew255, bidimrew256, bidimrew257, bidimrew258, bidimrew259, bidimrew260, bidimrew261, bidimrew262, bidimrew263, bidimrew264, bidimrew265, bidimrew266, bidimrew267, bidimrew268, bidimrew269, bidimrew270, bidimrew271, bidimrew272, bidimrew273, bidimrew274, bidimrew275, bidimrew276, bidimrew277, bidimrew278, bidimrew279, bidimrew280, bidimrew281, bidimrew282, bidimrew283, bidimrew284, bidimrew285, bidimrew286, bidimrew287, bidimrew288, bidimrew289, bidimrew290, bidimrew291, bidimrew292, bidimrew293, bidimrew294, bidimrew295, bidimrew296, bidimrew297, bidimrew298, bidimrew299
# signals = lambdarew21, lambdarew40, Radion300, Radion600, Radion900
signals = XXX_SIGNALS_XXX
# signals     = Radion600, lambdarew21

# signals     = Radion250, Radion300, Radion350, Radion400, Radion600, Radion900, lambdarew0, lambdarew21, lambdarew41
# signals = HHdynrew21, HHdynrew41, lambdarew21, lambdarew41, HHSM
backgrounds = TTfullyHad, TTfullyLep, TTsemiLep, DY0b, DY1b, DY2b, WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf, TWtop, TWantitop, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo4L, ZZTo4Q, ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau

# variables   = bH_mass_raw, tauH_SVFIT_mass, fatjet_softdropMass
# variables   = HH_mass_raw, HHKin_mass_raw, MT2, fatjet_softdropMass, bH_mass_raw, tauH_SVFIT_mass, BDTResonant, LepTauKine
# variables   = HHKin_mass_raw, MT2, bH_mass_raw, tauH_SVFIT_mass
variables = HHKin_mass_raw, HHKin_mass_raw_tauup, HHKin_mass_raw_taudown, HHKin_mass_raw_jetup, HHKin_mass_raw_jetdown, MT2, MT2_tauup, MT2_taudown, MT2_jetup, MT2_jetdown
# variables = bH_mass_raw, fatjet_softdropMass, tauH_SVFIT_mass, MT2
# variables   = HHKin_mass_raw, MT2


# variables2D = tauH_SVFIT_mass:bH_mass_raw

# NOTE: final selections are the cartesian combination of (selections) x (regions), name is set to selection_CR
# selections = defaultNoIso, defaultBtagLLNoIso, defaultBtagLLNoIsoBBTTCut
# selections = s1b1j, s2b0j, s1b1jMcut, s2b0jMcut, sboostedLL, sboostedMM
# selections = s1b1j, s2b0j, sboostedLL, sboostedMM, s1b1jresolvedMcut, s2b0jresolvedMcut, sboostedLLMcut, sboostedMMMcut
# selections = s1b1j, s2b0j, s1b1jresolved, s2b0jresolved
# selections = s1b1jresolved, s2b0jresolved, sboostedLL, s1b1jresolvedMcut, s2b0jresolvedMcut, sboostedLLMcut
selections = s1b1jresolvedMcut, s2b0jresolvedMcut, sboostedLLMcut
# selections = s2b0jresolved, s2b0jresolvedMcut, s1b1jresolved, s1b1jresolvedMcut, sboostedLL

# selections = s1b1jresolvedMcut_nominal, s2b0jresolvedMcut_nominal, sboostedLLMcut_nominal, s1b1jresolvedMcut_tesUp, s2b0jresolvedMcut_tesUp, sboostedLLMcut_tesUp, s1b1jresolvedMcut_tesDown, s2b0jresolvedMcut_tesDown, sboostedLLMcut_tesDown, s1b1jresolvedMcut_jesUp, s2b0jresolvedMcut_jesUp, sboostedLLMcut_jesUp, s1b1jresolvedMcut_jesDown, s2b0jresolvedMcut_jesDown, sboostedLLMcut_jesDown

regions    = SR, SStight, OSrlx, SSrlx, OSinviso, SSinviso
# regions    = SR, SStight, SSrlx

[configs]
sampleCfg = config/sampleCfg.cfg
cutCfg    = config/selectionCfg_TauTau.cfg

[merge]
TT       = TTfullyHad, TTfullyLep, TTsemiLep
# WJets    = WJets0jet, WJets1jet, WJets2jet, WJets3jet, WJets4jet
WJets    = WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
TW       = TWtop, TWantitop
EWKW     = EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu
WW       = WWTo2L2Nu, WWTo4Q, WWToLNuQQ
WZ       = WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu
ZZ       = ZZTo2L2Nu, ZZTo2L2Q, ZZTo4L, ZZTo4Q
ZH       = ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau
data_obs = DTau

############################################################################################
############################################################################################
# the following lines are used for postprocessing (pp_), i.e. not read from AnalysisHelper
# but used in subsequent steps of the analysis to combine histos, compute QCD etc..
# we keep them here to have everything at hand

[pp_merge]
# TT    = TTfullyHad, TTfullyLep, TTsemiLep
# WJets = WJets0jet, WJets1jet, WJets2jet, WJets3jet, WJets4jet

## in case some histos must be rebinned. Pass as
## uniqueid = varToRebin , condition, newBinning
[pp_rebin]
r1 = HHKin_mass_raw         , sboostedLLMcut , 250, 1000 # a unique, big bin
r2 = HHKin_mass_raw_tauup   , sboostedLLMcut , 250, 1000 # a unique, big bin
r3 = HHKin_mass_raw_taudown , sboostedLLMcut , 250, 1000 # a unique, big bin
r4 = HHKin_mass_raw_jetup   , sboostedLLMcut , 250, 1000 # a unique, big bin
r5 = HHKin_mass_raw_jetdown , sboostedLLMcut , 250, 1000 # a unique, big bin

r6  = MT2         , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
r7  = MT2_tauup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
r8  = MT2_taudown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
r9  = MT2_jetup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
r10 = MT2_jetdown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal

## parameters for QCD evaluation
## doFitIf : condition to be respected to make rlx-to-tight QCD fit. It is used as eval(doFitIf). Use names sel, var
[pp_QCD]
QCDname      = QCD
SR           = SR
yieldSB      = SStight
shapeSB      = SSrlx
SBtoSRfactor = 1.5
# doFitIf      = var == 'MT2' or var == 'HHKin_mass_raw'
doFitIf      = False
fitFunc      = [0] + [1]*x