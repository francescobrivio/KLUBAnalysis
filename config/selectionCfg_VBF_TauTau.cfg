
# the definition of composed selections. Can contain as well TCut style selections, e.g.:
# resolved = baseline, btagMM, massCut
# resolvedHighPt = baseline, btagMM, massCut, dau1_pt > 150
# use comma separated lists
[selections]

### some selections with tes up/down
### note: jets are selected at skim level to have pt > 20
### so I am raising the pt value to 25 just to test the change in the acceptance

baseline_nominal     = pairType == 2 && dau1_pt > 45 && abs (dau1_eta) < 2.1 && dau2_pt > 45 && abs (dau2_eta) < 2.1 && nleps == 0       && bjet1_pt_raw > 25         && bjet2_pt_raw > 25
baseline_tesUp       = pairType == 2 && dau1_pt_tauup > 45   && abs (dau1_eta) < 2.1 && dau2_pt_tauup > 45   && abs (dau2_eta) < 2.1 && nleps == 0       && bjet1_pt_raw > 25         && bjet2_pt_raw > 25
baseline_tesDown     = pairType == 2 && dau1_pt_taudown > 45 && abs (dau1_eta) < 2.1 && dau2_pt_taudown > 45 && abs (dau2_eta) < 2.1 && nleps == 0       && bjet1_pt_raw > 25         && bjet2_pt_raw > 25
baseline_jesUp       = pairType == 2 && dau1_pt > 45         && abs (dau1_eta) < 2.1 && dau2_pt > 45         && abs (dau2_eta) < 2.1 && nleps == 0       && bjet1_pt_raw_jetup > 25   && bjet2_pt_raw_jetup > 25
baseline_jesDown     = pairType == 2 && dau1_pt > 45         && abs (dau1_eta) < 2.1 && dau2_pt > 45         && abs (dau2_eta) < 2.1 && nleps == 0       && bjet1_pt_raw_jetdown > 25 && bjet2_pt_raw_jetdown > 25
ellypsMassCut_tesUp    = ((tauH_SVFIT_mass_up-116.)*(tauH_SVFIT_mass_up-116.))/(35.*35.) + ((bH_mass_raw-111.)*(bH_mass_raw-111.))/(45.*45.) <  1.0
ellypsMassCut_tesDown  = ((tauH_SVFIT_mass_down-116.)*(tauH_SVFIT_mass_down-116.))/(35.*35.) + ((bH_mass_raw-111.)*(bH_mass_raw-111.))/(45.*45.) <  1.0
ellypsMassCut_jesUp    = ((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.))/(35.*35.) + ((bH_mass_raw_jetup-111.)*(bH_mass_raw_jetup-111.))/(45.*45.) <  1.0
ellypsMassCut_jesDown  = ((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.))/(35.*35.) + ((bH_mass_raw_jetdown-111.)*(bH_mass_raw_jetdown-111.))/(45.*45.) <  1.0

s1b1jresolvedMcut_nominal = baseline_nominal , btagM, isBoosted != 1 , ellypsMassCut
s2b0jresolvedMcut_nominal = baseline_nominal , btagMM, isBoosted != 1 , ellypsMassCut
sboostedLLMcut_nominal    = baseline_nominal , btagLL, isBoosted == 1 , boostMassCut

s1b1jresolvedMcut_tesUp   = baseline_tesUp , btagM, isBoosted != 1 , ellypsMassCut_tesUp
s2b0jresolvedMcut_tesUp   = baseline_tesUp , btagMM, isBoosted != 1 , ellypsMassCut_tesUp
sboostedLLMcut_tesUp      = baseline_tesUp , btagLL, isBoosted == 1 , boostMassCut

s1b1jresolvedMcut_tesDown = baseline_tesDown , btagM, isBoosted != 1 , ellypsMassCut_tesDown
s2b0jresolvedMcut_tesDown = baseline_tesDown , btagMM, isBoosted != 1 , ellypsMassCut_tesDown
sboostedLLMcut_tesDown    = baseline_tesDown , btagLL, isBoosted == 1 , boostMassCut

s1b1jresolvedMcut_jesUp   = baseline_jesUp , btagM, isBoosted != 1 , ellypsMassCut_jesUp 
s2b0jresolvedMcut_jesUp   = baseline_jesUp , btagMM, isBoosted != 1 , ellypsMassCut_jesUp 
sboostedLLMcut_jesUp      = baseline_jesUp , btagLL, isBoosted == 1 , boostMassCut

s1b1jresolvedMcut_jesDown = baseline_jesDown , btagM, isBoosted != 1 , ellypsMassCut_jesDown 
s2b0jresolvedMcut_jesDown = baseline_jesDown , btagMM, isBoosted != 1 , ellypsMassCut_jesDown 
sboostedLLMcut_jesDown    = baseline_jesDown , btagLL, isBoosted == 1 , boostMassCut

###########################################################################################

baseline40     = pairType == 2 && dau1_pt > 40 && abs (dau1_eta) < 2.1 && dau2_pt > 40 && abs (dau2_eta) < 2.1 && nleps == 0
baseline4045     = pairType == 2 && dau2_pt > 40 && dau2_pt < 45 && abs (dau1_eta) < 2.1 && dau2_pt > 40 && dau2_pt < 45 && abs (dau2_eta) < 2.1 && nleps == 0
baseline     = pairType == 2 && dau1_pt > 45 && abs (dau1_eta) < 2.1 && dau2_pt > 45 && abs (dau2_eta) < 2.1 && nleps == 0

VBFpt  = jet3_pt > 30 && jet4_pt > 30
VBFmjj = VBFjet1_pt > 30 && VBFjet2_pt > 30
VBFeta = VBFjet1n_pt > 30 && VBFjet2n_pt > 30

baselineVBFpt  = baseline, VBFpt
baselineVBFmjj = baseline, VBFmjj
baselineVBFeta = baseline, VBFeta

btagL        = bjet1_bID > 0.5426 && bjet2_bID < 0.5426
btagM        = bjet1_bID > 0.8484 && bjet2_bID < 0.8484   
btagLL       = bjet1_bID > 0.5426 && bjet2_bID > 0.5426
btagMM       = bjet1_bID > 0.8484 && bjet2_bID > 0.8484
bVetoMM      = VBFjet1_btag < 0.8484 && VBFjet2_btag < 0.8484 
bVBF_M       = VBFjet1_btag > 0.8484 || VBFjet2_btag > 0.8484
oneBtagM     = bjet1_bID > 0.8484 || bjet2_bID > 0.8484

baselineVBF_btagM  = baselineVBF, btagM
baselineVBF_btagMM  = baselineVBF, btagMM
baselineVBF_btagM_bVetoMM = baselineVBF, btagM, bVetoMM

#massVBF_L = VBFjj_mass > 300
#deltaEtaVBF_L = VBFjj_deltaEta>2.5


massVBFpt_L      = jj_mass > 300
deltaEtaVBFpt_L  = jj_deltaEta>2

massVBFmjj_L     = VBFjj_mass > 300
deltaEtaVBFmjj_L = VBFjj_deltaEta>2

massVBFeta_L     = VBFjj_mass_n > 300
deltaEtaVBFeta_L = VBFjj_deltaEta_n >2


#baselineVBF_L   = baselineVBF, massVBF_L, deltaEtaVBF_L
baselineVBFpt_L  = baselineVBFpt , massVBFpt_L , deltaEtaVBFpt_L
baselineVBFmjj_L = baselineVBFmjj, massVBFmjj_L, deltaEtaVBFmjj_L
baselineVBFeta_L = baselineVBFeta, massVBFeta_L, deltaEtaVBFeta_L

baselineVBF_L_bVBF_M = baselineVBF_L, bVBF_M
nobtagMM     = bjet1_bID < 0.8484 && bjet2_bID < 0.8484


### final categories for VBF

VBFeta_baseline       = baselineVBFeta_L
VBFeta_1b1j           = baselineVBFeta_L, btagM
VBFeta_2b0j           = baselineVBFeta_L, btagMM
VBFeta_High_Eta_1bM   = baselineVBFeta_L, VBFjj_deltaEta_n > 4.0,  oneBtagM
VBFeta_Low_Eta_1bM    = baselineVBFeta_L, VBFjj_deltaEta_n <= 4.0, oneBtagM
VBFeta_High_Mass_1bM  = baselineVBFeta_L, VBFjj_mass_n > 700,      oneBtagM
VBFeta_Low_Mass_1bM   = baselineVBFeta_L, VBFjj_mass_n <= 700,     oneBtagM

VBFmjj_baseline       = baselineVBFmjj_L
VBFmjj_1b1j           = baselineVBFmjj_L, btagM
VBFmjj_2b0j           = baselineVBFmjj_L, btagMM
VBFmjj_High_Eta_1bM   = baselineVBFmjj_L, VBFjj_deltaEta > 4.0,  oneBtagM
VBFmjj_Low_Eta_1bM    = baselineVBFmjj_L, VBFjj_deltaEta <= 4.0, oneBtagM
VBFmjj_High_Mass_1bM  = baselineVBFmjj_L, VBFjj_mass > 700,      oneBtagM
VBFmjj_Low_Mass_1bM   = baselineVBFmjj_L, VBFjj_mass <= 700,     oneBtagM

VBFpt_baseline        = baselineVBFpt_L
VBFpt_1b1j            = baselineVBFpt_L, btagM
VBFpt_2b0j            = baselineVBFpt_L, btagMM
VBFpt_High_Eta_1bM    = baselineVBFpt_L, jj_deltaEta > 4.0,  oneBtagM
VBFpt_Low_Eta_1bM     = baselineVBFpt_L, jj_deltaEta <= 4.0, oneBtagM
VBFpt_High_Mass_1bM   = baselineVBFpt_L, jj_mass > 700,      oneBtagM
VBFpt_Low_Mass_1bM    = baselineVBFpt_L, jj_mass <= 700,     oneBtagM


#  VBFeta_High_Eta_2bMM  = baselineVBFeta_L, VBFjj_deltaEta_n > 4.0,  btagMM
#  VBFeta_Low_Eta_2bMM   = baselineVBFeta_L, VBFjj_deltaEta_n <= 4.0, btagMM
#  VBFmjj_High_Eta_2bMM  = baselineVBFmjj_L, VBFjj_deltaEta > 4.0,  btagMM
#  VBFmjj_Low_Eta_2bMM   = baselineVBFmjj_L, VBFjj_deltaEta <= 4.0, btagMM
#  VBFpt_High_Eta_2bMM   = baselineVBFpt_L, jj_deltaEta > 4.0,  btagMM
#  VBFpt_Low_Eta_2bMM    = baselineVBFpt_L, jj_deltaEta <= 4.0, btagMM



massCut      = bH_mass_raw > 80 && bH_mass_raw < 160 && tauH_SVFIT_mass > 80 && tauH_SVFIT_mass < 160
massCutCent  = tauH_SVFIT_mass > 79.5 && tauH_SVFIT_mass < 152.5 && bH_mass_raw > 74.5 && bH_mass_raw < 147.5
boostMassCut = tauH_SVFIT_mass > 79.5 && tauH_SVFIT_mass < 152.5 && fatjet_softdropMass > 90 && fatjet_softdropMass < 160
ellypsMassCut  = ((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.))/(35.*35.) + ((bH_mass_raw-111.)*(bH_mass_raw-111.))/(45.*45.) <  1.0
circMassCut  = TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) <  40.0
SR           = isOS != 0 && dau1_MVAiso >= 3 && dau2_MVAiso >= 3
OS           = isOS != 0 
SStight      = isOS == 0 && dau1_MVAiso >= 3 && dau2_MVAiso >= 3   
OSrlx        = isOS != 0 && dau1_MVAiso >= 3 && dau2_MVAiso >= 1
SSrlx        = isOS == 0 && dau1_MVAiso >= 3 && dau2_MVAiso >= 1
OSinviso        = isOS != 0 && dau1_MVAiso >= 3 && dau2_MVAiso >= 1 && dau2_MVAiso < 3
SSinviso        = isOS == 0 && dau1_MVAiso >= 3 && dau2_MVAiso >= 1 && dau2_MVAiso < 3

SStight2      = isOS == 0 && dau1_MVAiso >= 3 && dau2_MVAiso >= 2   

SRforEff      = SR, genDecMode1 == 2

# resolved     = baseline, btagMM, massCut, isBoosted != 1
# dummySel     = btagMM, pairType == 0 && dau1_pt > 19 && dau2_pt > 20
# dummySel2    = btagMM, pairType == 0 && dau1_pt > 19 && dau2_pt > 20 && bjet1_pt > 30
# SR           = isOS != 0 && dau1_iso < 0.1 && dau2_iso < 3.0 
# qcdOStight   = isOS != 0 && dau1_iso < 0.1 && dau2_iso < 3.0 
# qcdOSrlx     = isOS != 0 && dau1_iso < 0.1 && dau2_iso < 3.0 
# qcdSStight   = isOS == 0 && dau1_iso < 0.1 && dau2_iso < 3.0 
# qcdSSrlx     = isOS == 0 && dau1_iso < 0.1 && dau2_iso < 3.0 

# defaultNoIso               = baseline
# defaultBtagLLNoIso         = baseline, btagLL      
# defaultBtagLLNoIsoBBTTCut  = baseline, btagLL, massCut, HH_mass_raw > 200             

s1b1j        = baseline , btagM
s2b0j        = baseline , btagMM
s0b2j        = baseline , nobtagMM   

s1b1jresolved = baseline , btagM, isBoosted != 1
s2b0jresolved = baseline , btagMM, isBoosted != 1
sboostedLL    = baseline , btagLL, isBoosted == 1
sboostedMM    = baseline , btagMM, isBoosted == 1

s1b1jresolvedLcut = baseline , btagL, isBoosted != 1 , ellypsMassCut
s2b0jresolvedLcut = baseline , btagLL, isBoosted != 1 , ellypsMassCut

s1b1jresolvedMcut = baseline , btagM, isBoosted != 1 , ellypsMassCut
s2b0jresolvedMcut = baseline , btagMM, isBoosted != 1 , ellypsMassCut
sboostedLLMcut       = baseline , btagLL, isBoosted == 1 , boostMassCut
sboostedMMMcut       = baseline , btagMM, isBoosted == 1 , boostMassCut

s1b1jresolvedMcut40 = baseline40 , btagM, isBoosted != 1 , ellypsMassCut
s2b0jresolvedMcut40 = baseline40 , btagMM, isBoosted != 1 , ellypsMassCut
sboostedLLMcut40       = baseline40 , btagLL, isBoosted == 1 , boostMassCut

s1b1jresolvedMcut4045 = baseline4045 , btagM, isBoosted != 1 , ellypsMassCut
s2b0jresolvedMcut4045 = baseline4045 , btagMM, isBoosted != 1 , ellypsMassCut
sboostedLLMcut4045       = baseline4045 , btagLL, isBoosted == 1 , boostMassCut

s1b1jMcut    = baseline , btagM , ellypsMassCut
s2b0jMcut    = baseline , btagMM , ellypsMassCut
s1b1jMcutSquare    = baseline , btagM , massCut
s2b0jMcutSquare    = baseline , btagMM , massCut
s1b1jLcut    = baseline , btagL , ellypsMassCut
s2b0jLcut    = baseline , btagLL , ellypsMassCut
s1b1jLcutSquare    = baseline , btagL , massCut
s2b0jLcutSquare    = baseline , btagLL , massCut

s0b2jMcut         = s0b2j, ellypsMassCut
s0b2jresolvedMcut = s0b2jMcut, isBoosted != 1


# 1b1jMcutBDT = baseline , btagM , ellypsMassCut, resBDTCut
# 2b0jMcutBDT = baseline , btagMM , ellypsMassCut, resBDTCut


#########################################################################
#########################################################################

## weights to be applied for a certain selections when calling Fill()
## multiple weights are passed as list and are multiplied together
## NOTE: no weight is applied for data (the simple Fill() is used)
[selectionWeights]
baseline     = MC_weight, IdAndIsoSF, trigSF, PUReweight
baseline40   = MC_weight, IdAndIsoSF, trigSF, PUReweight
baseline4045 = MC_weight, IdAndIsoSF, trigSF, PUReweight
btagLL   = bTagweightL, DYscale_LL
btagMM   = bTagweightM, DYscale_MM
nobtagMM = bTagweightM, DYscale_MM
btagL = bTagweightL, DYscale_LL ## fixme: should DY scale be rederived for single tag?
btagM = bTagweightM, DYscale_MM ## fixme: should DY scale be rederived for single tag?

#########################################################################
#########################################################################

[sampleWeights]
TTfullyHad = TTtopPtreweight
TTfullyLep = TTtopPtreweight
TTsemiLep  = TTtopPtreweight

# HH reweight is already included in MC_weight
# lambdarew0 = HH
# lambdarew1 = HH
# lambdarew10 = HH
# lambdarew11 = HH
# lambdarew12 = HH
# lambdarew13 = HH
# lambdarew14 = HH
# lambdarew15 = HH
# lambdarew16 = HH
# lambdarew17 = HH
# lambdarew18 = HH
# lambdarew19 = HH
# lambdarew20 = HH
# lambdarew21 = HH
# lambdarew22 = HH
# lambdarew23 = HH
# lambdarew24 = HH
# lambdarew25 = HH
# lambdarew26 = HH
# lambdarew27 = HH
# lambdarew28 = HH
# lambdarew29 = HH
# lambdarew3 = HH
# lambdarew30 = HH
# lambdarew31 = HH
# lambdarew32 = HH
# lambdarew33 = HH
# lambdarew34 = HH
# lambdarew35 = HH
# lambdarew36 = HH
# lambdarew37 = HH
# lambdarew38 = HH
# lambdarew39 = HH
# lambdarew4 = HH
# lambdarew40 = HH
# lambdarew41 = HH
# lambdarew42 = HH
# lambdarew43 = HH
# lambdarew44 = HH
# lambdarew45 = HH
# lambdarew46 = HH
# lambdarew47 = HH
# lambdarew48 = HH
# lambdarew49 = HH
# lambdarew5 = HH
# lambdarew50 = HH
# lambdarew51 = HH
# lambdarew6 = HH
# lambdarew7 = HH
# lambdarew8 = HH
# lambdarew9 = HH

#########################################################################
#########################################################################


# define alternative weights to be tested instead of the nominal one
[systematics]
TTtopPtreweight  = topUp:TTtopPtreweight_up , topDown:TTtopPtreweight_down
# trigSF         = trigUP:trigSF_up , trigDOWN:trigSF_down
# turnOnreweight = rewUP:turnOnreweight_tauup, rewDO:turnOnreweight_taudown

#########################################################################
#########################################################################

# ROOT-like definition of the binning
[histos]
mT                = 20, 0, 200
HH_pt             = 50, 0, 500
# HHKin_mass        = 50, 250, 1000
bjet1_bID         = 12, -0.2, 1.2
# bjet1_bID         = 20, -0.5, 1.5
bjet2_bID         = 12, -0.2, 1.2
# bjet2_bID         = 20, -0.5, 1.5
HH_deltaPhi       = 15, 0., 3.14159
tauHMet_deltaPhi  = 15, 0., 3.14159
bHMet_deltaPhi    = 15, 0., 3.14159
ditau_deltaPhi    = 15, 0., 3.14159
dib_deltaPhi      = 15, 0., 3.14159
dau1_pt           = 40, 45, 405
dau1_eta          = 25, -2.5, 2.5
dau1_phi          = 25, -3.14159, 3.14159
#dau1_iso          = 24, 0, 8
dau2_pt           = 80, 45, 405
dau2_eta          = 25, -2.5, 2.5
dau2_phi          = 25, -3.14159, 3.14159
#dau2_iso          = 24, 0, 8
bjet1_pt          = 50, 0, 500
bjet2_pt          = 50, 0, 500
bjet1_eta         = 30, -3.0, 3.0
bjet2_eta         = 30, -3.0, 3.0
bjet1_phi         = 25, -3.14159, 3.14159
bjet2_phi         = 25, -3.14159, 3.14159
met_et            = 60, 0, 600
met_phi           = 25, -3.14159, 3.14159
bH_mass           = 25, 10, 510
tauH_mass         = 25, 10, 510
bH_mass_raw       = 25, 10, 500
tauH_SVFIT_mass   = 25, 10, 500
HHmass            = 25, 0, 1000
# njets             = 20, -0.5, 19.5
npv               = 50, 0, 50
tauHMetdeltaPhi   = 25, 0, 3.15
bHMetdeltaPhi     = 25, 0, 3.15
ditau_deltaR       = 25, 0, 5
dib_deltaR         = 25, 0, 5
dau1MET_deltaphi       = 25, 0, 3.14159
tauHsvfitMet_deltaPhi = 25, 0, 3.14159
mT1                   = 20, 0, 200.
mT2                   = 20, 0, 200.
HHsvfit_deltaPhi      = 25, 0, 3.14159
BDTResonant           = 25,-1,1
LepTauKine            = 25,-0.94,0.94
genDecMode1           = 10, -2, 8
VBFjj_mass	      = 30, 0, 2400
# VBFjj_mass	      = 25, 0,2000
VBFjj_deltaEta	      = 16, 2, 10
# VBFjj_deltaEta	      = 20, 0, 10
VBFjj_HT	      = 50,0,2000
VBFjet1_pt	      = 50,0,200
VBFjet1_eta	      = 20, -5., 5.
VBFjet2_pt	      = 50,0,200
VBFjet2_eta	      =	20, -5., 5.
VBFjj_mass_n	  = 30, 0, 2400
# VBFjj_mass_n	  = 25, 0,2000
VBFjj_deltaEta_n  = 16, 2, 10
# VBFjj_deltaEta_n  = 20, 0, 10
VBFjj_HT_n	      = 50,0,2000
VBFjet1n_pt	      = 50,0,200
VBFjet1n_eta	      = 20, -5., 5.
VBFjet2n_pt	      = 50,0,200
VBFjet2n_eta	      =	20, -5., 5.
jj_mass		     = 25, 0,2000
jj_deltaEta	     = 20, 0, 10
jj_HT		     = 50, 0,2000
VBFjet2_btag	     = 20, -0.5, 1.5
VBFjet1_btag	     = 20, -0.5, 1.5
dau1_z		     = 20,-2,2
dau2_z		     = 20,-2,2
bjet1_z		     = 20,-2,2
bjet2_z		     = 20,-2,2
tauH_z		     = 20,-2,2
HH_z		     = 20,-2,2
HH_zV		     = 20,-10,4
HH_A		     = 20,0,10
jet5_z		     = 20, -2, 2		     
jet5_pt		     = 50, 0, 500
jet5_eta	     = 20, -5, 5
dau1_iso 	     = 60, -0.8, 1.
dau2_iso 	     = 60, -0.8, 1.
dau1_MVAiso 	     = 6, 0, 6
dau2_MVAiso 	     = 6, 0, 6
met_et_corr          = 60, 0, 600
jet3_z		     = 20, -2, 2		     
jet3_pt		     = 50, 0, 500
jet3_eta	     = 20, -5, 5
jet4_z		     = 20, -2, 2		     
jet4_pt		     = 50, 0, 500
jet4_eta	     = 20, -5, 5
top_Wc_bclose_mass = 50,0,500
top_Wc_bcentral_mass= 50,0,500
top_Wc_bforward_mass= 50,0,500
top_Wf_bclose_mass = 50,0,500
top_Wf_bcentral_mass= 50,0,500
top_Wf_bforward_mass= 50,0,500
ditau_deltaEta     = 20,0,10
dib_deltaEta       = 20,0,10
HH_deltaEta        = 20,0,10
addjets  = 10,0,10
njets  = 10,0,10


#########################################################################
#########################################################################

# user defined binning for a variable - has precedence on [histos]
[binning]
HH_mass             = 200, 250, 300, 350, 450, 600, 1000
# HH_mass_raw         = 200, 250, 300, 350, 450, 600, 1000
# HH_mass_raw_tauup   = 200, 250, 300, 350, 450, 600, 1000
# HH_mass_raw_taudown = 200, 250, 300, 350, 450, 600, 1000
# HH_mass_raw         = 200, 225, 250, 275, 300, 350, 450, 550, 700, 1000 #200, 225, 250, 275, 300, 350, 400, 450, 500, 600, 1000
# HH_mass_raw_tauup   = 200, 225, 250, 275, 300, 350, 450, 550, 700, 1000
# HH_mass_raw_taudown = 200, 225, 250, 275, 300, 350, 450, 550, 700, 1000
HHKin_mass          = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000, 1600
# HHKin_mass_raw      = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000, 1600

HH_mass_raw          = 0, 100, 200, 225, 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000

HHKin_mass_raw          = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000
HHKin_mass_raw_tauup    = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000
HHKin_mass_raw_taudown  = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000
HHKin_mass_raw_jetup    = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000
HHKin_mass_raw_jetdown  = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000

# bH_mass             = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# bH_mass_raw         = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
fatjet_softdropMass = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# tauH_SVFIT_mass     = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# MT2                 = 0, 25, 50, 75, 100, 125, 150, 175, 200, 250, 300, 350, 500, 600
MT2          = 0, 25, 50, 75, 100, 125, 150, 200, 250, 300, 500
MT2_tauup    = 0, 25, 50, 75, 100, 125, 150, 200, 250, 300, 500
MT2_taudown  = 0, 25, 50, 75, 100, 125, 150, 200, 250, 300, 500
MT2_jetup    = 0, 25, 50, 75, 100, 125, 150, 200, 250, 300, 500
MT2_jetdown  = 0, 25, 50, 75, 100, 125, 150, 200, 250, 300, 500

HH_pt     = 0, 20, 40, 60, 80, 100, 125, 150, 175, 200, 250, 300, 400, 500
tauH_mass = 10, 35,  510

#########################################################################
#########################################################################

[histos2D]
tauH_SVFIT_mass:bH_mass_raw = 100, 0, 500, 100, 0, 500
genDecMode1:genDecMode2     = 10, -2, 8, 10, -2, 8

# user defined binning for a variable - will override the definition in [histos2D]
# NOTE: if both x and y binnings are defined, there is no need to insert a binning in [histos2D]
# note: to specify an user binning for a certain axis of a 2D plot, e.g. a binning for B in A:B, use '@' :
# A:B@B = 0, 15, 20, 30, 50, 1000
[binning2D]
# tauH_SVFIT_mass:bH_mass_raw@bH_mass_raw     = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# tauH_SVFIT_mass:bH_mass_raw@tauH_SVfit_mass = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
